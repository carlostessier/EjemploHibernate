package ejemplo.jpa;
// Generated 25-may-2018 1:36:00 by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Empleados generated by hbm2java
 * 
 * javax.persistence.Entity anotación se utiliza para señalizar a hibernate que está clase la puede hacer persistente.
 * javax.persistence.Table anotación se utiliza para definir el mapeo de tabla y definir restricciones de unicidad.
 * javax.persistence.Id anotación se usa para definir la clave primaria. 
 * javax.persistence.GeneratedValue se usa para definir que este campo es autogenerado 
 * GenerationType.IDENTITY strategy se usa para mapear el valor autogenerado "id" y que pueda ser recuperado en el POJO por java.
 * javax.persistence.Column anotación se usa para mapear el atributo con una columna de la tabla:
 * podemos especificar longitud, nullable y unicidad para las columnas.

 */


@Entity
@Table(name="empleados"
    ,catalog="ejemplo"
)
public class Empleados  implements java.io.Serializable {


     private short empNo;
     private Departamentos departamentos;
     private String apellido;
     private String oficio;
     private Short dir;
     private Date fechaAlt;
     private Float salario;
     private Float comision;

    public Empleados() {
    }

	
    public Empleados(short empNo, Departamentos departamentos) {
        this.empNo = empNo;
        this.departamentos = departamentos;
    }
    public Empleados(short empNo, Departamentos departamentos, String apellido, String oficio, Short dir, Date fechaAlt, Float salario, Float comision) {
       this.empNo = empNo;
       this.departamentos = departamentos;
       this.apellido = apellido;
       this.oficio = oficio;
       this.dir = dir;
       this.fechaAlt = fechaAlt;
       this.salario = salario;
       this.comision = comision;
    }
   
     @Id 

    
    @Column(name="emp_no", unique=true, nullable=false)
    public short getEmpNo() {
        return this.empNo;
    }
    
    public void setEmpNo(short empNo) {
        this.empNo = empNo;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="dept_no", nullable=false)
    public Departamentos getDepartamentos() {
        return this.departamentos;
    }
    
    public void setDepartamentos(Departamentos departamentos) {
        this.departamentos = departamentos;
    }

    
    @Column(name="apellido", length=20)
    public String getApellido() {
        return this.apellido;
    }
    
    public void setApellido(String apellido) {
        this.apellido = apellido;
    }

    
    @Column(name="oficio", length=30)
    public String getOficio() {
        return this.oficio;
    }
    
    public void setOficio(String oficio) {
        this.oficio = oficio;
    }

    
    @Column(name="dir")
    public Short getDir() {
        return this.dir;
    }
    
    public void setDir(Short dir) {
        this.dir = dir;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="fecha_alt", length=10)
    public Date getFechaAlt() {
        return this.fechaAlt;
    }
    
    public void setFechaAlt(Date fechaAlt) {
        this.fechaAlt = fechaAlt;
    }

    
    @Column(name="salario", precision=6)
    public Float getSalario() {
        return this.salario;
    }
    
    public void setSalario(Float salario) {
        this.salario = salario;
    }

    
    @Column(name="comision", precision=6)
    public Float getComision() {
        return this.comision;
    }
    
    public void setComision(Float comision) {
        this.comision = comision;
    }

    




}


